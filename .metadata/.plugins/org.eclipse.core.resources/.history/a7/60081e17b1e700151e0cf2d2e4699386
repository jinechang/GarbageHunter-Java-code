import java.util.Date;
import java.util.List;

import BusinessLayer.ItemBusinessLogic;
import BusinessLayer.PostItemBusinessLogic;
import DataAccessLayer.PostitemStatus;
import DatatransferObjects.Category;
import DatatransferObjects.Item;
import DatatransferObjects.PostItem;
import DatatransferObjects.User;

public class Test {
	PostItemBusinessLogic postlogic = new PostItemBusinessLogic();
	ItemBusinessLogic itemlogic = new ItemBusinessLogic();

	public void test() {
			//String testRecordPrimaryKey = "";
			
			//post an item
			System.out.println("\n-----Post an item-----");
			post();
			
			
			//search items posted
			String keyword_item = "TV";
			search(keyword_item);

	}
	
	private void search(String keyword_item) {
		List<PostItem> list = null;
		System.out.println("\n-----Search All TVs-----");
		
		Item item = itemlogic.getItemByName(keyword_item);
		if(item != null){
			list = postlogic.getItemByItem(item);
			System.out.println("There are "+list.size()+" TVs are posted:");
			for(PostItem post:list){
				System.out.println(post.toString());
			}
			}
		else
			System.out.println(" TV is posted.");
	}

	private void post() {
		PostItem post = inputdata("Java Programming","Technical book","BOOK","Wenjun",3,100);
		if (postlogic.addItem(post)==1){
			System.out.print("\nCongratulations! This item is posted successfully.");
			}
	}

	private PostItem inputdata(String postitemName,String itemName,String category,String seller,
			int yearsofuse,int postPrice) {
		
		PostItem postitem = new PostItem();

		System.out.println("Enter the data of item: ");
		System.out.println("postitemName:  "+postitemName);
		System.out.println("itemName:      "+itemName);
		System.out.println("category:      "+category);
		System.out.println("seller:        "+seller);
		System.out.println("yearsofuse:    "+yearsofuse);
		System.out.println("postPrice:     "+postPrice);
		
		Item item = checkItem(itemName,category);
		User user = checkUser(seller);
		postitem.setPostItem(postitemName);
		postitem.setItem(item);
		postitem.setCategory(postitem.getItem().getCategory());
		postitem.setPostUser(user);
		postitem.setYearsofuse(yearsofuse);
		postitem.setPostPrice(postPrice);
		postitem.setPostDate(new Date());
		postitem.setStatus(PostitemStatus.AVAILABLE);
		
		return postitem;
	}
	
	private User checkUser(String seller) {
		User user = new User(seller);
		return user;
	}

	private Item checkItem(String itemName, String category) {

		Item item = itemlogic.getItemByName(itemName);
		if ( item == null){
			System.out.println("add new Item:"+itemName+" with Category:"+category);
			item = new Item(itemName,new Category(category));
			itemlogic.addItem(item);
		}
			return item;
	}


}
